<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NSwag.Commands</name>
    </assembly>
    <members>
        <member name="T:NSwag.Commands.CodeGeneratorCollection">
            <summary>The command collection.</summary>
        </member>
        <member name="P:NSwag.Commands.CodeGeneratorCollection.SwaggerToTypeScriptClientCommand">
            <summary>Gets or sets the SwaggerToTypeScriptClientCommand.</summary>
        </member>
        <member name="P:NSwag.Commands.CodeGeneratorCollection.SwaggerToCSharpClientCommand">
            <summary>Gets or sets the SwaggerToCSharpClientCommand.</summary>
        </member>
        <member name="P:NSwag.Commands.CodeGeneratorCollection.SwaggerToCSharpControllerCommand">
            <summary>Gets or sets the SwaggerToCSharpControllerCommand.</summary>
        </member>
        <member name="P:NSwag.Commands.CodeGeneratorCollection.Items">
            <summary>Gets the items.</summary>
        </member>
        <member name="T:NSwag.Commands.CodeGeneration.OperationGenerationMode">
            <summary>Specifies how the operation name and client classes/interfaces are generated.</summary>
        </member>
        <member name="F:NSwag.Commands.CodeGeneration.OperationGenerationMode.MultipleClientsFromOperationId">
            <summary>Multiple clients from the Swagger operation ID in the form '{controller}_{action}'.</summary>
        </member>
        <member name="F:NSwag.Commands.CodeGeneration.OperationGenerationMode.MultipleClientsFromPathSegments">
            <summary>From path segments (operation name = last segment, client name = second to last segment).</summary>
        </member>
        <member name="F:NSwag.Commands.CodeGeneration.OperationGenerationMode.SingleClientFromOperationId">
            <summary>From the Swagger operation ID.</summary>
        </member>
        <member name="F:NSwag.Commands.CodeGeneration.OperationGenerationMode.SingleClientFromPathSegments">
            <summary>From path segments suffixed by HTTP operation name</summary>
        </member>
        <member name="M:NSwag.Commands.InputOutputCommandBase.GetInputSwaggerDocument">
            <exception cref="T:System.ArgumentException">The argument 'Input' was empty.</exception>
        </member>
        <member name="M:NSwag.Commands.InputOutputCommandBase.GetJsonSchemaAsync">
            <exception cref="T:System.ArgumentException">The argument 'Input' was empty.</exception>
        </member>
        <member name="T:NSwag.Commands.IsolatedCommandBase`1">
            <summary>A command which is run in isolation.</summary>
        </member>
        <member name="T:NSwag.Commands.IsolatedSwaggerOutputCommandBase`1">
            <summary>A command which is run in isolation.</summary>
        </member>
        <member name="T:NSwag.Commands.SwaggerGeneration.AspNetCore.AspNetCoreToSwaggerCommand">
            <summary>The generator.</summary>
        </member>
        <member name="T:NSwag.Commands.SwaggerGeneration.AspNetCore.AspNetCoreToSwaggerGeneratorCommandEntryPoint">
            <summary>In-process entry point for the aspnetcore2swagger command.</summary>
        </member>
        <member name="T:NSwag.Commands.SwaggerGeneration.AspNetCore.AspNetCoreToSwaggerGeneratorCommandSettings">
            <summary>Settings for the AspNetCoreToSwaggerGeneratorCommand and AspNetCoreToSwaggerGeneratorCommandEntryPoint.</summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerGeneration.AspNetCore.AspNetCoreToSwaggerGeneratorCommandSettings.DocumentProcessorTypes">
            <summary>Gets or sets the additional document processor type names in the form 'assemblyName:fullTypeName' or 'fullTypeName' which are instantiated during generation.</summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerGeneration.AspNetCore.AspNetCoreToSwaggerGeneratorCommandSettings.OperationProcessorTypes">
            <summary>Gets or sets the additional operation processor type names in the form 'assemblyName:fullTypeName' or 'fullTypeName' which are instantiated during generation.</summary>
        </member>
        <member name="T:NSwag.Commands.SwaggerGeneration.FromSwaggerCommand">
            <summary>Reads a Swagger specification from JSON or an URL.</summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerGeneration.FromSwaggerCommand.Swagger">
            <summary>Gets or sets the input Swagger specification.</summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerGeneration.FromSwaggerCommand.Url">
            <summary>Gets or sets the input Swagger specification URL.</summary>
        </member>
        <member name="M:NSwag.Commands.SwaggerGeneration.FromSwaggerCommand.RunAsync(NConsole.CommandLineProcessor,NConsole.IConsoleHost)">
            <summary>Runs the asynchronous.</summary>
            <param name="processor">The processor.</param>
            <param name="host">The host.</param>
            <returns></returns>
        </member>
        <member name="M:NSwag.Commands.SwaggerGeneration.FromSwaggerCommand.RunAsync">
            <summary>Loads the Swagger spec.</summary>
        </member>
        <member name="E:NSwag.Commands.SwaggerGeneration.FromSwaggerCommand.PropertyChanged">
            <summary>Occurs when property changed.</summary>
        </member>
        <member name="M:NSwag.Commands.SwaggerGeneration.FromSwaggerCommand.OnPropertyChanged(System.String)">
            <summary>Called when property changed.</summary>
        </member>
        <member name="T:NSwag.Commands.SwaggerGeneration.SwaggerGeneratorCommandBase`1">
            <inheritdoc />
        </member>
        <member name="M:NSwag.Commands.SwaggerGeneration.SwaggerGeneratorCommandBase`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Commands.SwaggerGeneration.SwaggerGeneratorCommandBase`1"/> class.</summary>
        </member>
        <member name="T:NSwag.Commands.SwaggerGeneration.TypesToSwaggerCommand">
            <summary></summary>
        </member>
        <member name="M:NSwag.Commands.SwaggerGeneration.TypesToSwaggerCommand.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Commands.SwaggerGeneration.TypesToSwaggerCommand"/> class.</summary>
        </member>
        <member name="T:NSwag.Commands.SwaggerGeneration.WebApi.WebApiToSwaggerCommand">
            <summary>The generator.</summary>
        </member>
        <member name="M:NSwag.Commands.SwaggerGeneration.WebApi.WebApiToSwaggerCommand.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Commands.SwaggerGeneration.WebApi.WebApiToSwaggerCommand"/> class.</summary>
        </member>
        <member name="T:NSwag.Commands.Tooling.VersionCommand">
            <summary>Prints the tool chain version.</summary>
        </member>
        <member name="M:NSwag.Commands.Tooling.VersionCommand.RunAsync(NConsole.CommandLineProcessor,NConsole.IConsoleHost)">
            <summary>Runs the command.</summary>
            <param name="processor">The processor.</param>
            <param name="host">The host.</param>
            <returns>The output.</returns>
        </member>
        <member name="T:NSwag.Commands.NSwagCommandProcessor">
            <summary></summary>
        </member>
        <member name="M:NSwag.Commands.NSwagCommandProcessor.#ctor(NConsole.IConsoleHost)">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Commands.NSwagCommandProcessor" /> class.</summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:NSwag.Commands.NSwagCommandProcessor.Process(System.String[])">
            <summary>Processes the command line arguments.</summary>
            <param name="args">The arguments.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:NSwag.Commands.NSwagDocument">
            <summary>The NSwagDocument implementation.</summary>
            <seealso cref="T:NSwag.Commands.NSwagDocumentBase" />
        </member>
        <member name="P:NSwag.Commands.NSwagDocument.RootBinaryDirectory">
            <summary>Gets or sets the root binary directory where the command line executables loaded from.</summary>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Commands.NSwagDocument"/> class.</summary>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.Create">
            <summary>Creates a new NSwagDocument.</summary>
            <returns>The document.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.LoadAsync(System.String)">
            <summary>Loads an existing NSwagDocument.</summary>
            <param name="filePath">The file path.</param>
            <returns>The document.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.LoadWithTransformationsAsync(System.String,System.String)">
            <summary>Loads an existing NSwagDocument with environment variable expansions and variables.</summary>
            <param name="filePath">The file path.</param>
            <param name="variables">The variables.</param>
            <returns>The document.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.ExecuteAsync">
            <summary>Executes the document.</summary>
            <returns>The task.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.ExecuteCommandLineAsync(System.Boolean)">
            <summary>Executes the document via command line.</summary>
            <param name="redirectOutput">Indicates whether to redirect the outputs.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.GetControllersFromCommandLineAsync">
            <summary>Gets the available controller types by calling the command line.</summary>
            <returns>The controller names.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.GetTypesFromCommandLineAsync">
            <summary>Gets the available controller types by calling the command line.</summary>
            <returns>The controller names.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.ConvertToAbsolutePath(System.String)">
            <summary>Converts to absolute path.</summary>
            <param name="pathToConvert">The path to convert.</param>
            <returns>The absolute path.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.ConvertToRelativePath(System.String)">
            <summary>Converts a path to an relative path.</summary>
            <param name="pathToConvert">The path to convert.</param>
            <returns>The relative path.</returns>
        </member>
        <member name="T:NSwag.Commands.NSwagDocumentBase">
            <summary>The NSwagDocument base class.</summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Commands.NSwagDocumentBase"/> class.</summary>
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.ConvertToAbsolutePath(System.String)">
            <summary>Converts a path to an absolute path.</summary>
            <param name="pathToConvert">The path to convert.</param>
            <returns>The absolute path.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.ConvertToRelativePath(System.String)">
            <summary>Converts a path to an relative path.</summary>
            <param name="pathToConvert">The path to convert.</param>
            <returns>The relative path.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.ExecuteAsync">
            <summary>Executes the current document.</summary>
            <returns>The result.</returns>
        </member>
        <member name="P:NSwag.Commands.NSwagDocumentBase.Runtime">
            <summary>Gets or sets the runtime where the document should be processed.</summary>
        </member>
        <member name="P:NSwag.Commands.NSwagDocumentBase.DefaultVariables">
            <summary>Gets or sets the default variables.</summary>
        </member>
        <member name="P:NSwag.Commands.NSwagDocumentBase.SelectedSwaggerGeneratorRaw">
            <summary>Gets or sets the selected swagger generator JSON.</summary>
        </member>
        <member name="P:NSwag.Commands.NSwagDocumentBase.SwaggerGenerators">
            <summary>Gets the swagger generators.</summary>
        </member>
        <member name="P:NSwag.Commands.NSwagDocumentBase.CodeGenerators">
            <summary>Gets the code generators.</summary>
        </member>
        <member name="P:NSwag.Commands.NSwagDocumentBase.Path">
            <summary>Gets or sets the path.</summary>
        </member>
        <member name="P:NSwag.Commands.NSwagDocumentBase.Name">
            <summary>Gets the name of the document.</summary>
        </member>
        <member name="P:NSwag.Commands.NSwagDocumentBase.IsDirty">
            <summary>Gets a value indicating whether the document is dirty (has any changes).</summary>
        </member>
        <member name="P:NSwag.Commands.NSwagDocumentBase.SelectedSwaggerGenerator">
            <summary>Gets the selected Swagger generator.</summary>
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.Create``1">
            <summary>Creates a new NSwagDocument.</summary>
            <typeparam name="TDocument">The type.</typeparam>
            <returns>The document.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.LoadAsync``1(System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.Type,System.Type})">
            <summary>Loads an existing NSwagDocument.</summary>
            <typeparam name="TDocument">The type.</typeparam>
            <param name="filePath">The file path.</param>
            <param name="variables">The variables.</param>
            <param name="applyTransformations">Specifies whether to expand environment variables and convert variables.</param>
            <param name="mappings">The mappings.</param>
            <returns>The document.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.FromJson``1(System.String,System.String)">
            <summary>Converts the document to JSON.</summary>
            <typeparam name="TDocument">The document type.</typeparam>
            <param name="filePath">The file path.</param>
            <param name="data">The JSON data.</param>
            <returns>The document.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.SaveAsync">
            <summary>Saves the document.</summary>
            <returns>The task.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.ToJsonWithRelativePaths">
            <summary>Converts the document to JSON with relative paths.</summary>
            <returns>The JSON data.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.ToJson">
            <summary>Converts the document to JSON.</summary>
            <returns>The JSON data.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.GenerateSwaggerDocumentAsync">
            <summary>Generates the <see cref="T:NSwag.SwaggerDocument"/> with the currently selected generator.</summary>
            <returns>The document.</returns>
        </member>
        <member name="E:NSwag.Commands.NSwagDocumentBase.PropertyChanged">
            <summary>Occurs when a property value changes.</summary>
        </member>
        <member name="M:NSwag.Commands.NSwagDocumentBase.RaiseAllPropertiesChanged">
            <summary>Raises all properties changed.</summary>
        </member>
        <member name="T:NSwag.Commands.Runtime">
            <summary>Enumeration of .NET runtimes where a document can be processed.</summary>
        </member>
        <member name="F:NSwag.Commands.Runtime.Default">
            <summary>Use default and do no checks.</summary>
        </member>
        <member name="F:NSwag.Commands.Runtime.WinX64">
            <summary>Full .NET framework, x64.</summary>
        </member>
        <member name="F:NSwag.Commands.Runtime.WinX86">
            <summary>Full .NET framework, x86.</summary>
        </member>
        <member name="F:NSwag.Commands.Runtime.NetCore10">
            <summary>.NET Core 1.0 app.</summary>
        </member>
        <member name="F:NSwag.Commands.Runtime.NetCore11">
            <summary>.NET Core 1.1 app.</summary>
        </member>
        <member name="F:NSwag.Commands.Runtime.NetCore20">
            <summary>.NET Core 2.0 app.</summary>
        </member>
        <member name="F:NSwag.Commands.Runtime.NetCore21">
            <summary>.NET Core 2.1 app.</summary>
        </member>
        <member name="F:NSwag.Commands.Runtime.Debug">
            <summary>Execute in the same proces.</summary>
        </member>
        <member name="T:NSwag.Commands.RuntimeUtilities">
            <summary>Provides runtime utilities.</summary>
        </member>
        <member name="P:NSwag.Commands.RuntimeUtilities.CurrentRuntime">
            <summary>Gets the current runtime.</summary>
        </member>
        <member name="T:NSwag.Commands.SwaggerDocumentExecutionResult">
            <summary>Stores the result of a <see cref="T:NSwag.SwaggerDocument"/> execution.</summary>
        </member>
        <member name="M:NSwag.Commands.SwaggerDocumentExecutionResult.#ctor(System.String,System.String,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Commands.NSwagDocumentBase"/> class.</summary>
            <param name="output">The command line output.</param>
            <param name="swaggerOutput">The Swagger JSON output.</param>
            <param name="isRedirectedOutput">Indicates whether the output is redirect.</param>
        </member>
        <member name="P:NSwag.Commands.SwaggerDocumentExecutionResult.Output">
            <summary>Gets the command line output.</summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerDocumentExecutionResult.SwaggerOutput">
            <summary>Gets the Swagger JSON output.</summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerDocumentExecutionResult.IsRedirectedOutput">
            <summary>Gets a value indicating whether the output is redirect.</summary>
        </member>
        <member name="M:NSwag.Commands.SwaggerDocumentExecutionResult.AddGeneratorOutput(System.Type,System.String)">
            <summary>Adds a generator output (e.g. code) to the result</summary>
            <param name="key">The type of the generator command.</param>
            <param name="output">The output string.</param>
        </member>
        <member name="M:NSwag.Commands.SwaggerDocumentExecutionResult.GetGeneratorOutput``1">
            <summary>Gets a genrator output with a generator command type key.</summary>
            <typeparam name="T">The generator command type.</typeparam>
            <returns>The output.</returns>
        </member>
        <member name="T:NSwag.Commands.SwaggerGeneratorCollection">
            <summary></summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerGeneratorCollection.FromSwaggerCommand">
            <summary>Gets or sets the input to swagger command.</summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerGeneratorCollection.JsonSchemaToSwaggerCommand">
            <summary>Gets or sets the json schema to swagger command.</summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerGeneratorCollection.WebApiToSwaggerCommand">
            <summary>Gets or sets the Web API to swagger command.</summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerGeneratorCollection.AspNetCoreToSwaggerCommand">
            <summary>Gets or sets the ASP.NET Core to swagger command.</summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerGeneratorCollection.TypesToSwaggerCommand">
            <summary>Gets or sets the assembly type to swagger command.</summary>
        </member>
        <member name="P:NSwag.Commands.SwaggerGeneratorCollection.Items">
            <summary>Gets the items.</summary>
        </member>
    </members>
</doc>
