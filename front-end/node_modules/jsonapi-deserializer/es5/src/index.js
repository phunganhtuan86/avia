"use strict";
var lodash_1 = require("lodash");
function deserialize(doc) {
    return denormalize(doc.data, createRelationshipsHash(doc));
}
exports.deserialize = deserialize;
function createRelationshipsHash(doc) {
    var result = {};
    if (doc.included) {
        doc.included.forEach(function (resource) {
            var id = resource.id, type = resource.type;
            lodash_1.merge(result, (_a = {}, _a[type] = (_b = {}, _b[id] = resource, _b), _a));
            var _a, _b;
        });
    }
    return result;
}
function denormalize(resources, relations) {
    return fmapMultiple(resources, function (resource) {
        return processResource(resource, relations);
    });
}
function processResource(res, relHash) {
    var id = res.id, attributes = res.attributes, relationships = res.relationships;
    var rels = lodash_1.mapValues(relationships, function (rel) {
        return fmapMultiple(rel.data, function (relId) {
            var relRes = findRelation(relId, relHash);
            return relRes && processResource(relRes, relHash);
        });
    });
    return lodash_1.assign({}, attributes, { id: id }, rels);
}
function findRelation(rel, relations) {
    return relations[rel.type] && relations[rel.type][rel.id];
}
// Helper functions
function fmapMultiple(data, transform) {
    // Null Case
    if (!data) {
        return undefined;
    }
    else if (lodash_1.isArray(data)) {
        return data.map(transform);
    }
    else {
        return transform(data);
    }
}
//# sourceMappingURL=index.js.map