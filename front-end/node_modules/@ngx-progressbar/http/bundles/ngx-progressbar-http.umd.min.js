!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("rxjs/operators"),require("@ngx-progressbar/core"),require("@angular/common/http")):"function"==typeof define&&define.amd?define("@ngx-progressbar/http",["exports","@angular/core","rxjs/operators","@ngx-progressbar/core","@angular/common/http"],e):e((r["ngx-progressbar"]=r["ngx-progressbar"]||{},r["ngx-progressbar"].http={}),r.ng.core,r.rxjs.operators,r.core$1,r.ng.common.http)}(this,function(r,t,o,e,n){"use strict";var s=function(){return(s=Object.assign||function(r){for(var e,t=1,o=arguments.length;t<o;t++)for(var n in e=arguments[t])Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=e[n]);return r}).apply(this,arguments)},i=new t.InjectionToken("config"),p=function(){function r(r,e){this._inProgressCount=0,this._config={id:"root",silentApis:[]},this._config=s({},this._config,e),this._progressRef=r.ref(this._config.id)}return r.prototype.intercept=function(r,e){var t=this;return this.checkUrl(r)?e.handle(r):(this._inProgressCount++,this._progressRef.isStarted||this._progressRef.start(),e.handle(r).pipe(o.finalize(function(){t._inProgressCount--,0===t._inProgressCount&&t._progressRef.complete()})))},r.prototype.checkUrl=function(r){var e=r.url.toLowerCase();return!!this._config.silentApis.find(function(r){return e.startsWith(r)})},r.decorators=[{type:t.Injectable}],r.ctorParameters=function(){return[{type:e.NgProgress},{type:undefined,decorators:[{type:t.Optional},{type:t.Inject,args:[i]}]}]},r}(),c=function(){function e(){}return e.forRoot=function(r){return{ngModule:e,providers:[{provide:i,useValue:r},{provide:n.HTTP_INTERCEPTORS,useClass:p,multi:!0}]}},e.decorators=[{type:t.NgModule,args:[{}]}],e}();r.NgProgressHttpModule=c,r.ɵb=i,r.ɵc=p,Object.defineProperty(r,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-progressbar-http.umd.min.js.map