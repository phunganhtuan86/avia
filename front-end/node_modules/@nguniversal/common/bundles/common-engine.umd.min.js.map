{"version":3,"sources":["modules/common/common-engine.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","nguniversal","common","engine","fs","tslib","ng","compiler","core","platformServer","this","tslib_1","FileLoader","prototype","get","url","Promise","resolve","reject","readFile","err","buffer","toString","CommonEngine","moduleOrFactory","providers","factoryCacheMap","Map","templateCache","getCompiler","platformDynamicServer","injector","CompilerFactory","createCompiler","provide","ResourceLoader","useClass","deps","render","opts","__awaiter","_a","extraProviders","__generator","_b","label","document","getDocument","documentFilePath","sent","__spread","INITIAL_CONFIG","useValue","getFactory","renderModuleFactory","_this","NgModuleFactory","moduleFactory","compileModuleAsync","then","set","filePath","doc","readFileSync","ɵFileLoader","ɵCommonEngine","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('fs'), require('tslib'), require('@angular/compiler'), require('@angular/core'), require('@angular/platform-server')) :\n    typeof define === 'function' && define.amd ? define('@nguniversal/common/engine', ['exports', 'fs', 'tslib', '@angular/compiler', '@angular/core', '@angular/platform-server'], factory) :\n    (global = global || self, factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = global.nguniversal.common || {}, global.nguniversal.common.engine = {}), global.fs, global.tslib, global.ng.compiler, global.ng.core, global.ng.platformServer));\n}(this, function (exports, fs, tslib_1, compiler, core, platformServer) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** ResourceLoader implementation for loading files */\n    var FileLoader = /** @class */ (function () {\n        function FileLoader() {\n        }\n        FileLoader.prototype.get = function (url) {\n            return new Promise(function (resolve, reject) {\n                fs.readFile(url, function (err, buffer) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    resolve(buffer.toString());\n                });\n            });\n        };\n        return FileLoader;\n    }());\n\n    /**\n     * A common rendering engine utility. This abstracts the logic\n     * for handling the platformServer compiler, the module cache, and\n     * the document loader\n     */\n    var CommonEngine = /** @class */ (function () {\n        function CommonEngine(moduleOrFactory, providers) {\n            if (providers === void 0) { providers = []; }\n            this.moduleOrFactory = moduleOrFactory;\n            this.providers = providers;\n            this.factoryCacheMap = new Map();\n            this.templateCache = {};\n        }\n        /** Return an instance of the platformServer compiler */\n        CommonEngine.prototype.getCompiler = function () {\n            var compilerFactory = platformServer.platformDynamicServer().injector.get(core.CompilerFactory);\n            return compilerFactory.createCompiler([\n                { providers: [{ provide: compiler.ResourceLoader, useClass: FileLoader, deps: [] }] }\n            ]);\n        };\n        /**\n         * Render an HTML document for a specific URL with specified\n         * render options\n         */\n        CommonEngine.prototype.render = function (opts) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var doc, _a, extraProviders, factory;\n                return tslib_1.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = opts.document;\n                            if (_a) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.getDocument(opts.documentFilePath)];\n                        case 1:\n                            _a = (_b.sent());\n                            _b.label = 2;\n                        case 2:\n                            doc = _a;\n                            extraProviders = tslib_1.__spread((opts.providers || []), (this.providers || []), [\n                                {\n                                    provide: platformServer.INITIAL_CONFIG,\n                                    useValue: {\n                                        document: doc,\n                                        url: opts.url\n                                    }\n                                }\n                            ]);\n                            return [4 /*yield*/, this.getFactory()];\n                        case 3:\n                            factory = _b.sent();\n                            return [2 /*return*/, platformServer.renderModuleFactory(factory, { extraProviders: extraProviders })];\n                    }\n                });\n            });\n        };\n        /** Return the factory for a given engine instance */\n        CommonEngine.prototype.getFactory = function () {\n            var _this = this;\n            // If module has been compiled AoT\n            var moduleOrFactory = this.moduleOrFactory;\n            if (moduleOrFactory instanceof core.NgModuleFactory) {\n                return Promise.resolve(moduleOrFactory);\n            }\n            else {\n                // we're in JIT mode\n                var moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n                // If module factory is cached\n                if (moduleFactory) {\n                    return Promise.resolve(moduleFactory);\n                }\n                // Compile the module and cache it\n                return this.getCompiler().compileModuleAsync(moduleOrFactory)\n                    .then(function (factory) {\n                    _this.factoryCacheMap.set(moduleOrFactory, factory);\n                    return factory;\n                });\n            }\n        };\n        /** Retrieve the document from the cache or the filesystem */\n        CommonEngine.prototype.getDocument = function (filePath) {\n            var doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n                fs.readFileSync(filePath).toString();\n            // As  promise so we can change the API later without breaking\n            return Promise.resolve(doc);\n        };\n        return CommonEngine;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵFileLoader = FileLoader;\n    exports.ɵCommonEngine = CommonEngine;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=common-engine.umd.js.map\n"]}