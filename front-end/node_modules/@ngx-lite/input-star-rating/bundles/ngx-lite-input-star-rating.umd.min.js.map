{"version":3,"sources":["ng://@ngx-lite/input-star-rating/ngx-input-star-rating.component.ts","ng://@ngx-lite/input-star-rating/ngx-input-star-rating.module.ts"],"names":["starIcons","outline","full","half","this","_value","count","disabled","buttons","onChange","onTouched","Object","defineProperty","NgxInputStarRatingComponent","prototype","val","valueUpdate","registerOnChange","fn","registerOnTouched","writeValue","value","ngOnInit","i","push","active","icon","ngOnChanges","changes","currentValue","rate","index","forEach","btn","total","reduce","prev","next","mouseEnter","mouseLeave","starValue","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","encapsulation","ViewEncapsulation","None","Input","NgxInputStarRatingModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"2bAYA,IAAMA,EAAY,CAChBC,QAAS,UACTC,KAAM,OACNC,KAAM,kCA8BNC,KAAAC,OAAyB,EACzBD,KAAAE,MAAiB,EACjBF,KAAAG,UAAoB,EAEpBH,KAAAJ,UAAqBA,EAErBI,KAAAI,QAA+C,GAG/CJ,KAAAK,SAAW,SAACJ,KAGZD,KAAAM,UAAY,oBAvBZC,OAAAC,eAAIC,EAAAC,UAAA,QAAK,KAAT,WACE,OAAOV,KAAKC,YAGd,SAAUU,GACRX,KAAKC,OAASU,EACdX,KAAKK,SAASM,GACdX,KAAKY,YAAYZ,KAAKC,QACtBD,KAAKM,6CAiBPG,EAAAC,UAAAG,iBAAA,SAAiBC,GACfd,KAAKK,SAAWS,GAGlBL,EAAAC,UAAAK,kBAAA,SAAkBD,GAChBd,KAAKM,UAAYQ,GAGnBL,EAAAC,UAAAM,WAAA,SAAWC,GACLA,IAAUjB,KAAKiB,QACjBjB,KAAKiB,MAAQA,IAIjBR,EAAAC,UAAAQ,SAAA,WACE,IAAK,IAAIC,EAAI,EAAGA,EAAInB,KAAKE,MAAOiB,IAC9BnB,KAAKI,QAAQgB,KAAK,CAAEC,QAAQ,EAAOC,KAAM1B,EAAUC,UAGrDG,KAAKY,YAAYZ,KAAKiB,QAGxBR,EAAAC,UAAAa,YAAA,SAAYC,GACNA,EAAO,OAAUA,EAAO,MAAOC,cACjCzB,KAAKY,YAAYY,EAAO,MAAOC,eAInChB,EAAAC,UAAAgB,KAAA,SAAKC,GACH3B,KAAKI,QAAQwB,QAAQ,SAACC,EAAKV,GAEvBU,EAAIP,KADFH,GAAKQ,EACI/B,EAAUE,KAEVF,EAAUC,UAIzB,IAAMiC,EAAQ9B,KAAKI,QAAQ2B,OAAO,SAACC,EAAMC,GACvC,OAAIA,EAAKX,OAAS1B,EAAUE,KACnBkC,EAAO,EAEPA,GAER,GAEHhC,KAAKiB,MAAQa,GAGfrB,EAAAC,UAAAwB,WAAA,SAAWP,GACT3B,KAAKI,QAAQwB,QAAQ,SAACC,EAAKV,GAEvBU,EAAIR,OADFF,GAAKQ,KAQblB,EAAAC,UAAAyB,WAAA,WACEnC,KAAKI,QAAQwB,QAAQ,SAAAT,GAAK,OAACA,EAAEE,QAAS,KAGhCZ,EAAAC,UAAAE,qBAAYK,GAClBjB,KAAKI,QAAQwB,QAAQ,SAACC,EAAKV,GACzB,IAAMiB,EAAYjB,EAAI,EAETiB,GAATnB,IACFY,EAAIP,KAAO1B,EAAUE,MAGVsC,EAAY,IAArBnB,GAA4BA,EAAQmB,IACtCP,EAAIP,KAAO1B,EAAUG,6BAhH5BsC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wBACVC,SAAA,m1CAEAC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,UAAW,CACT,CACEC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAvC,IAC9BwC,OAAO,IAGXC,cAAeC,EAAAA,kBAAkBC,0mBAehCC,EAAAA,MAAKf,KAAA,CAAC,wBACNe,EAAAA,wBACAA,EAAAA,cC/CHC,EAAA,oDAKCC,EAAAA,SAAQjB,KAAA,CAAC,CACRkB,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACjD,GACfkD,QAAS,CAAClD,SARZ","sourcesContent":["import {\n  forwardRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst starIcons = {\n  outline: 'outline',\n  full: 'full',\n  half: 'half'\n};\n\n@Component({\n  selector: 'ngx-input-star-rating',\n  templateUrl: './ngx-input-star-rating.component.html',\n  styleUrls: ['./ngx-input-star-rating.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxInputStarRatingComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxInputStarRatingComponent\n  implements ControlValueAccessor, OnInit, OnChanges {\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n    this.onChange(val);\n    this.valueUpdate(this._value);\n    this.onTouched();\n  }\n\n  @Input('value') _value = 0;\n  @Input() count = 5;\n  @Input() disabled = false;\n\n  readonly starIcons = starIcons;\n\n  buttons: { active: boolean; icon: string }[] = [];\n\n  // tslint:disable-next-line:no-empty\n  onChange = (_value: number) => {};\n\n  // tslint:disable-next-line:no-empty\n  onTouched = () => {};\n\n  registerOnChange(fn: (value: number) => void) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: number) {\n    if (value !== this.value) {\n      this.value = value;\n    }\n  }\n\n  ngOnInit() {\n    for (let i = 0; i < this.count; i++) {\n      this.buttons.push({ active: false, icon: starIcons.outline });\n    }\n\n    this.valueUpdate(this.value);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.value && changes.value.currentValue) {\n      this.valueUpdate(changes.value.currentValue);\n    }\n  }\n\n  rate(index: number) {\n    this.buttons.forEach((btn, i) => {\n      if (i <= index) {\n        btn.icon = starIcons.full;\n      } else {\n        btn.icon = starIcons.outline;\n      }\n    });\n\n    const total = this.buttons.reduce((prev, next) => {\n      if (next.icon === starIcons.full) {\n        return prev + 1;\n      } else {\n        return prev;\n      }\n    }, 0);\n\n    this.value = total;\n  }\n\n  mouseEnter(index: number) {\n    this.buttons.forEach((btn, i) => {\n      if (i <= index) {\n        btn.active = true;\n      } else {\n        btn.active = false;\n      }\n    });\n  }\n\n  mouseLeave() {\n    this.buttons.forEach(i => (i.active = false));\n  }\n\n  private valueUpdate(value: number) {\n    this.buttons.forEach((btn, i) => {\n      const starValue = i + 1;\n\n      if (value >= starValue) {\n        btn.icon = starIcons.full;\n      }\n\n      if (value >= starValue - 0.5 && value < starValue) {\n        btn.icon = starIcons.half;\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxInputStarRatingComponent } from './ngx-input-star-rating.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxInputStarRatingComponent],\n  exports: [NgxInputStarRatingComponent]\n})\nexport class NgxInputStarRatingModule {}\n"]}