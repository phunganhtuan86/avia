{"version":3,"file":"common.js","sources":["../src/transfer_http.ts","../src/state-transfer-initializer/module.ts","../common_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n  HttpParams\n} from '@angular/common/http';\nimport {ApplicationRef, Injectable, NgModule} from '@angular/core';\nimport {\n  BrowserTransferStateModule,\n  TransferState,\n  makeStateKey,\n  StateKey\n} from '@angular/platform-browser';\nimport {Observable, of as observableOf} from 'rxjs';\nimport {tap, take, filter} from 'rxjs/operators';\n\nexport interface TransferHttpResponse {\n  body?: any | null;\n  headers?: {[k: string]: string[]};\n  status?: number;\n  statusText?: string;\n  url?: string;\n}\n\nfunction getHeadersMap(headers: HttpHeaders) {\n  const headersMap: {[name: string]: string[]} = {};\n  for (const key of headers.keys()) {\n    headersMap[key] = headers.getAll(key)!;\n  }\n  return headersMap;\n}\n\n@Injectable()\nexport class TransferHttpCacheInterceptor implements HttpInterceptor {\n\n  private isCacheActive = true;\n\n  private invalidateCacheEntry(url: string) {\n    Object.keys(this.transferState['store'])\n      .forEach(key => key.includes(url) ? this.transferState.remove(makeStateKey(key)) : null);\n  }\n\n  private makeCacheKey(method: string, url: string, params: HttpParams): StateKey<string> {\n    // make the params encoded same as a url so it's easy to identify\n    const encodedParams = params.keys().sort().map(k => `${k}=${params.get(k)}`).join('&');\n    const key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n    return makeStateKey<TransferHttpResponse>(key);\n  }\n\n  constructor(appRef: ApplicationRef, private transferState: TransferState) {\n    // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    appRef.isStable\n      .pipe(\n        filter((isStable: boolean) => isStable),\n        take(1)\n      ).toPromise()\n      .then(() => { this.isCacheActive = false; });\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Stop using the cache if there is a mutating call.\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      this.isCacheActive = false;\n      this.invalidateCacheEntry(req.url);\n    }\n\n    if (!this.isCacheActive) {\n      // Cache is no longer active. Pass the request through.\n      return next.handle(req);\n    }\n\n    const storeKey = this.makeCacheKey(req.method, req.url, req.params);\n\n    if (this.transferState.hasKey(storeKey)) {\n      // Request found in cache. Respond using it.\n      const response = this.transferState.get(storeKey, {} as TransferHttpResponse);\n      return observableOf(new HttpResponse<any>({\n        body: response.body,\n        headers: new HttpHeaders(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        url: response.url,\n      }));\n    } else {\n      // Request not found in cache. Make the request and cache it.\n      const httpEvent = next.handle(req);\n      return httpEvent\n        .pipe(\n          tap((event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n              this.transferState.set(storeKey, {\n                body: event.body,\n                headers: getHeadersMap(event.headers),\n                status: event.status,\n                statusText: event.statusText,\n                url: event.url!,\n              });\n            }\n          })\n        );\n    }\n  }\n}\n\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\n@NgModule({\n  imports: [BrowserTransferStateModule],\n  providers: [\n    TransferHttpCacheInterceptor,\n    {provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true},\n  ],\n})\nexport class TransferHttpCacheModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nexport function domContentLoadedFactory(doc: Document) {\n  return () => new Promise ((resolve, _reject) => {\n    const contentLoaded = () => {\n      doc.removeEventListener('DOMContentLoaded', contentLoaded);\n      resolve();\n    };\n    if (doc.readyState === 'complete' || doc.readyState === 'interactive') {\n      resolve();\n    } else {\n      doc.addEventListener('DOMContentLoaded', contentLoaded);\n    }\n  });\n}\n\n\n@NgModule({\n  providers: [\n    {provide: APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [DOCUMENT]},\n  ]\n})\nexport class StateTransferInitializerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {domContentLoadedFactory as Éµnguniversal_modules_common_common_a} from './src/state-transfer-initializer/module';"],"names":["observableOf"],"mappings":"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"}