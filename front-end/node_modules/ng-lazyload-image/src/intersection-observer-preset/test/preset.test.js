import { is } from '@tjoskar/assert';
import { getObservable, isVisible } from '../preset';
describe('isVisible', function () {
    it('Should be visible if isIntersecting is true', function () {
        var args = {
            event: {
                isIntersecting: true
            }
        };
        var result = isVisible(args);
        is(result, true);
    });
    it('Should not be visible if isIntersecting is false', function () {
        var args = {
            event: {
                isIntersecting: false
            }
        };
        var result = isVisible(args);
        is(result, false);
    });
});
describe('getObservable', function () {
    it('Should return custom observable if giving one', function () {
        var observable = {};
        var result = getObservable({ scrollObservable: observable }, null);
        is(result, observable);
    });
    it('Should return IntersectionObserver', function () {
        var observable = {};
        var getIntersectionObserver = function () { return observable; };
        var result = getObservable({}, getIntersectionObserver);
        is(result, observable);
    });
});
//# sourceMappingURL=preset.test.js.map