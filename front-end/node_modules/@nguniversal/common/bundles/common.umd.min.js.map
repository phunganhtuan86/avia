{"version":3,"sources":["modules/common/common.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","nguniversal","common","tslib","ng","http","core","platformBrowser","rxjs","operators","this","tslib_1","getHeadersMap","headers","e_1","_a","headersMap","_b","__values","keys","_c","next","done","key","value","getAll","e_1_1","error","return","call","TransferHttpCacheInterceptor","appRef","transferState","_this","isCacheActive","isStable","pipe","filter","take","toPromise","then","prototype","invalidateCacheEntry","url","Object","forEach","includes","remove","makeStateKey","makeCacheKey","method","params","encodedParams","sort","map","k","get","join","intercept","req","handle","storeKey","hasKey","response","of","HttpResponse","body","HttpHeaders","status","statusText","tap","event","set","__decorate","Injectable","__metadata","ApplicationRef","TransferState","TransferHttpCacheModule","NgModule","imports","BrowserTransferStateModule","providers","provide","HTTP_INTERCEPTORS","useExisting","multi","domContentLoadedFactory","doc","Promise","resolve","_reject","contentLoaded","removeEventListener","readyState","addEventListener","StateTransferInitializerModule","APP_INITIALIZER","useFactory","deps","DOCUMENT","ɵnguniversal_modules_common_common_a","ɵTransferHttpCacheInterceptor","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/common/http'), require('@angular/core'), require('@angular/platform-browser'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :\n    typeof define === 'function' && define.amd ? define('@nguniversal/common', ['exports', 'tslib', '@angular/common/http', '@angular/core', '@angular/platform-browser', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :\n    (global = global || self, factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = {}), global.tslib, global.ng.common.http, global.ng.core, global.ng.platformBrowser, global.rxjs, global.rxjs.operators, global.ng.common));\n}(this, function (exports, tslib_1, http, core, platformBrowser, rxjs, operators, common) { 'use strict';\n\n    function getHeadersMap(headers) {\n        var e_1, _a;\n        var headersMap = {};\n        try {\n            for (var _b = tslib_1.__values(headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                headersMap[key] = headers.getAll(key);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return headersMap;\n    }\n    var TransferHttpCacheInterceptor = /** @class */ (function () {\n        function TransferHttpCacheInterceptor(appRef, transferState) {\n            var _this = this;\n            this.transferState = transferState;\n            this.isCacheActive = true;\n            // Stop using the cache if the application has stabilized, indicating initial rendering is\n            // complete.\n            appRef.isStable\n                .pipe(operators.filter(function (isStable) { return isStable; }), operators.take(1)).toPromise()\n                .then(function () { _this.isCacheActive = false; });\n        }\n        TransferHttpCacheInterceptor.prototype.invalidateCacheEntry = function (url) {\n            var _this = this;\n            Object.keys(this.transferState['store'])\n                .forEach(function (key) { return key.includes(url) ? _this.transferState.remove(platformBrowser.makeStateKey(key)) : null; });\n        };\n        TransferHttpCacheInterceptor.prototype.makeCacheKey = function (method, url, params) {\n            // make the params encoded same as a url so it's easy to identify\n            var encodedParams = params.keys().sort().map(function (k) { return k + \"=\" + params.get(k); }).join('&');\n            var key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n            return platformBrowser.makeStateKey(key);\n        };\n        TransferHttpCacheInterceptor.prototype.intercept = function (req, next) {\n            var _this = this;\n            // Stop using the cache if there is a mutating call.\n            if (req.method !== 'GET' && req.method !== 'HEAD') {\n                this.isCacheActive = false;\n                this.invalidateCacheEntry(req.url);\n            }\n            if (!this.isCacheActive) {\n                // Cache is no longer active. Pass the request through.\n                return next.handle(req);\n            }\n            var storeKey = this.makeCacheKey(req.method, req.url, req.params);\n            if (this.transferState.hasKey(storeKey)) {\n                // Request found in cache. Respond using it.\n                var response = this.transferState.get(storeKey, {});\n                return rxjs.of(new http.HttpResponse({\n                    body: response.body,\n                    headers: new http.HttpHeaders(response.headers),\n                    status: response.status,\n                    statusText: response.statusText,\n                    url: response.url,\n                }));\n            }\n            else {\n                // Request not found in cache. Make the request and cache it.\n                var httpEvent = next.handle(req);\n                return httpEvent\n                    .pipe(operators.tap(function (event) {\n                    if (event instanceof http.HttpResponse) {\n                        _this.transferState.set(storeKey, {\n                            body: event.body,\n                            headers: getHeadersMap(event.headers),\n                            status: event.status,\n                            statusText: event.statusText,\n                            url: event.url,\n                        });\n                    }\n                }));\n            }\n        };\n        TransferHttpCacheInterceptor = tslib_1.__decorate([\n            core.Injectable(),\n            tslib_1.__metadata(\"design:paramtypes\", [core.ApplicationRef, platformBrowser.TransferState])\n        ], TransferHttpCacheInterceptor);\n        return TransferHttpCacheInterceptor;\n    }());\n    /**\n     * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n     * calls from the server to the client application.\n     */\n    var TransferHttpCacheModule = /** @class */ (function () {\n        function TransferHttpCacheModule() {\n        }\n        TransferHttpCacheModule = tslib_1.__decorate([\n            core.NgModule({\n                imports: [platformBrowser.BrowserTransferStateModule],\n                providers: [\n                    TransferHttpCacheInterceptor,\n                    { provide: http.HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true },\n                ],\n            })\n        ], TransferHttpCacheModule);\n        return TransferHttpCacheModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function domContentLoadedFactory(doc) {\n        return function () { return new Promise(function (resolve, _reject) {\n            var contentLoaded = function () {\n                doc.removeEventListener('DOMContentLoaded', contentLoaded);\n                resolve();\n            };\n            if (doc.readyState === 'complete' || doc.readyState === 'interactive') {\n                resolve();\n            }\n            else {\n                doc.addEventListener('DOMContentLoaded', contentLoaded);\n            }\n        }); };\n    }\n    var StateTransferInitializerModule = /** @class */ (function () {\n        function StateTransferInitializerModule() {\n        }\n        StateTransferInitializerModule = tslib_1.__decorate([\n            core.NgModule({\n                providers: [\n                    { provide: core.APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [common.DOCUMENT] },\n                ]\n            })\n        ], StateTransferInitializerModule);\n        return StateTransferInitializerModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵnguniversal_modules_common_common_a = domContentLoadedFactory;\n    exports.TransferHttpCacheModule = TransferHttpCacheModule;\n    exports.StateTransferInitializerModule = StateTransferInitializerModule;\n    exports.ɵTransferHttpCacheInterceptor = TransferHttpCacheInterceptor;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=common.umd.js.map\n"]}